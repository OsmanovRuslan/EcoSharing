server:
  port: 0

spring:
  application:
    name: auth-service

  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
    enabled: true

  kafka:
    bootstrap-servers: localhost:9092,localhost:9094,localhost:9096
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      properties:
        linger.ms: 0
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5

telegram:
  botToken: {TELEGRAM_BOT_TOKEN}

auth:
  password:
    encoder:
      strength: 12

kafka:
  topic:
    notification-requests: notification-requests

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/

jwt:
  secret: ${JWT_SECRET}
  accessExpirationMs: 3600000 # 1 час
  refreshExpirationMs: 604800000 # 7 дней

admin:
  secret:
    password: ${ADMIN_SECRET_PASSWORD}
moderator:
  secret:
    password: ${MANAGER_SECRET_PASSWORD}